From d804381398fa553a1a30796886209b56bc8b2955 Mon Sep 17 00:00:00 2001
From: V1tr10l7 <vitriol1744@gmail.com>
Date: Wed, 22 Jan 2025 16:16:05 +0100
Subject: [PATCH] [feat]: implement getsid, setsid syscalls

---
 sysdeps/cryptix/include/cryptix/syscall.h |  2 ++
 sysdeps/cryptix/sysdeps/process.cpp       | 18 ++++++++++++++++++
 sysdeps/cryptix/sysdeps/vfs.cpp           |  5 +++--
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/sysdeps/cryptix/include/cryptix/syscall.h b/sysdeps/cryptix/include/cryptix/syscall.h
index 0dfe0b6c..ca1bbd58 100644
--- a/sysdeps/cryptix/include/cryptix/syscall.h
+++ b/sysdeps/cryptix/include/cryptix/syscall.h
@@ -53,7 +53,9 @@ namespace mlibc
     constexpr size_t SYS_GETEGID    = 108;
     constexpr size_t SYS_SETPGID    = 109;
     constexpr size_t SYS_GETPPID    = 110;
+    constexpr size_t SYS_SETSID     = 112;
     constexpr size_t SYS_GETPGID    = 121;
+    constexpr size_t SYS_GETSID     = 124;
     constexpr size_t SYS_ARCH_PRCTL = 158;
     constexpr size_t SYS_GETDENTS64 = 217;
     constexpr size_t SYS_PANIC      = 255;
diff --git a/sysdeps/cryptix/sysdeps/process.cpp b/sysdeps/cryptix/sysdeps/process.cpp
index eb679bd3..2a54630c 100644
--- a/sysdeps/cryptix/sysdeps/process.cpp
+++ b/sysdeps/cryptix/sysdeps/process.cpp
@@ -5,6 +5,7 @@
 
 namespace mlibc
 {
+    int   sys_sleep(time_t* secs, long* nanos) { return 0; }
     pid_t sys_getpid() { return Syscall(SYS_GETPID); }
     void  sys_exit(int code)
     {
@@ -34,6 +35,14 @@ namespace mlibc
         return 0;
     }
     pid_t sys_getppid() { return Syscall(SYS_GETPPID); }
+    pid_t sys_setsid(pid_t* out)
+    {
+        auto ret = Syscall(SYS_SETSID);
+        if (auto e = syscall_error(ret); e) return e;
+
+        *out = ret;
+        return 0;
+    }
     pid_t sys_getpgid(pid_t pid, pid_t* out)
     {
         auto ret = Syscall(SYS_GETPGID, pid);
@@ -42,6 +51,15 @@ namespace mlibc
         *out = ret;
         return 0;
     }
+    pid_t sys_getsid(pid_t pid, pid_t* out)
+    {
+        auto ret = Syscall(SYS_GETSID, pid);
+        if (auto e = syscall_error(ret); e) return e;
+
+        *out = ret;
+        return 0;
+    }
+
     int sys_fork(pid_t* child)
     {
         auto ret = Syscall(SYS_FORK);
diff --git a/sysdeps/cryptix/sysdeps/vfs.cpp b/sysdeps/cryptix/sysdeps/vfs.cpp
index 7af44e87..b701a8f2 100644
--- a/sysdeps/cryptix/sysdeps/vfs.cpp
+++ b/sysdeps/cryptix/sysdeps/vfs.cpp
@@ -31,8 +31,9 @@ namespace mlibc
     {
         switch (num)
         {
-            case _SC_OPEN_MAX: *ret = INT32_MAX; break;
-            case _SC_CHILD_MAX: *ret = INT32_MAX; break;
+            case _SC_OPEN_MAX:
+            case _SC_CHILD_MAX:
+            case _SC_LINE_MAX: *ret = INT32_MAX; break;
             default: return EINVAL;
         }
 
-- 
2.47.1

