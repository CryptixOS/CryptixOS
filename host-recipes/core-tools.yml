tools:
  - name: bootstrap-system-gcc
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        # - '--disable-multilib'
        - '--enable-initfini-array'
        - '--without-headers'
        - '--without-newlib'
        - '--enable-languages=c,c++,lto'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
        # libstdc++ can detect that wchar_t is supported by @SYSROOT_DIR@ and
        # try to enable code we don't want for wchar handling.  just remove it.
        - '--disable-wchar_t'
        - '--disable-libssp'
        - '--disable-libsanitizer'
        - '--disable-libquadmath'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        pkgs_required:
         - mlibc-headers
        compile:
          # GCC complains if the include directory is non-existent.
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/@OPTION:arch-triple@/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/as',
                               '@PREFIX@/@OPTION:arch-triple@/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/ld',
                               '@PREFIX@/@OPTION:arch-triple@/bin/ld']
      - name: libgcc
        tools_required:
          - tool: bootstrap-system-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++-v3
        tools_required:
          - tool: bootstrap-system-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: cross-binutils
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    from_source: binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--disable-werror'
        - '--enable-targets=x86_64-elf,x86_64-pe'
        # - '--enable-default-hash-style=gnu'
        - 'CFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']

  - name: host-autoconf-archive
    architecture: noarch
    exports_aclocal: true
    source:
      subdir: 'sources'
      git: 'https://github.com/autoconf-archive/autoconf-archive.git'
      tag: 'v2019.01.06'
      version: '2019.01.06'
    revision: 2
    install:
      - args: ['mkdir', '-p', '@BUILD_ROOT@/tools/host-autoconf-archive/share/']
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/m4', '@BUILD_ROOT@/tools/host-autoconf-archive/share/aclocal']

  - name: host-autoconf-v2.69
    architecture: noarch
    source:
      name: autoconf-2v.69
      subdir: 'sources'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.69'
      version: '2.69'
    revision: 2
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.71
    architecture: noarch
    source:
      name: autoconf-v2.71
      subdir: 'sources'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.xz'
      format: 'tar.xz'
      checksum: blake2b:7fd4b98b4cfff10720e8da6ee91045637991643b50fcb3e47a0ecfcc01600f7b7b36fd1c0a5f08b68a418f1bdbd8d5a98de1008157595dd37cc3a31facb61416
      extract_path: 'autoconf-2.71'
      version: '2.71'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.11
    architecture: noarch
    source:
      name: automake-v1.11
      subdir: 'sources'
      url: 'https://ftp.gnu.org/gnu/automake/automake-1.11.6.tar.xz'
      format: 'tar.xz'
      extract_path: 'automake-1.11.6'
      version: '1.11.6'
      patch-path-strip: 1
    tools_required:
      - host-autoconf-v2.69
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

  - name: host-automake-v1.15
    architecture: noarch
    source:
      name: automake-v1.15
      subdir: 'sources'
      url: 'https://ftp.gnu.org/gnu/automake/automake-1.15.1.tar.xz'
      format: 'tar.xz'
      extract_path: 'automake-1.15.1'
      version: '1.15.1'
      patch-path-strip: 1
    tools_required:
      - host-autoconf-v2.69
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']
  - name: host-automake-v1.16
    architecture: noarch
    source:
      name: automake-v1.16
      subdir: 'sources'
      git: 'https://git.savannah.gnu.org/git/automake.git'
      tag: 'v1.16.5'
      version: '1.16.5'
      sources_required: ['gnuconfig']
      tools_required:
       - host-autoconf-v2.71
      regenerate:
       - args: ['cp', '@SOURCE_ROOT@/sources/gnuconfig/config.sub', '@THIS_SOURCE_DIR@/lib/']
       - args: ['cp', '@SOURCE_ROOT@/sources/gnuconfig/config.guess', '@THIS_SOURCE_DIR@/lib/']
       - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.71
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.16', '@PREFIX@/share/aclocal']

  - name: host-bison
    architecture: noarch
    from_source: bison
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-cargo
    stability_level: 'broken' # Rust updates?
    architecture: noarch
    source:
      subdir: 'sources'
      git: 'https://github.com/rust-lang/cargo.git'
      tag: '0.73.1'
      version: '0.73.1'
    tools_required:
      - tool: host-rust
        recursive: true
      - tool: system-gcc # GCC is used for linking
        recursive: true
    sources_required:
      # This cargo runs on the host, so we don't actually need any patches here. We just
      # add the sources used by cargo so that the dependency resolver doesn't complain.
      - rust-patched-libs
      # Cargo requires cargo to build, so we download a binary that we can use temporarily
      - host-bootstrap-cargo
    compile:
      - args:
        - '@THIS_SOURCE_DIR@/../host-bootstrap-cargo/cargo/bin/cargo'
        - 'install'
        - '--target'
        - 'x86_64-unknown-linux-gnu'
        - '--target-dir'
        - '@THIS_BUILD_DIR@'
        - '--path'
        - '@THIS_SOURCE_DIR@'
        - '-j@PARALLELISM@'
        - '--root'
        - '@PREFIX@'
        isolate_network: false

  - name: host-cmake
    architecture: noarch
    from_source: cmake
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/bootstrap'
        - '--prefix=@PREFIX@'
        - '--parallel=@PARALLELISM@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/scripts/managarm.cmake', '@PREFIX@/share/cmake-3.26/Modules/Platform/']

  - name: host-file
    labels: [aarch64]
    architecture: noarch
    from_source: file
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-gettext
    architecture: noarch
    from_source: gettext
    exports_aclocal: true
    tools_required:
      - host-bison
      - host-autoconf-v2.69
      - host-automake-v1.15
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'CFLAGS=-Wno-implicit-function-declaration'
    compile:
      - args: 'make'
    install:
      - args: ['make', 'install']

  - name: host-libffi
    architecture: '@OPTION:arch@'
    from_source: libffi
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-libtool
    architecture: noarch
    exports_aclocal: true
    source:
      name: libtool
      subdir: 'sources'
      url: 'https://ftp.gnu.org/gnu/libtool/libtool-2.4.7.tar.xz'
      format: 'tar.xz'
      extract_path: 'libtool-2.4.7'
      version: '2.4.7'
      patch-path-strip: 1
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-llvm-toolchain
    architecture: noarch
    exports_shared_libs: true
    from_source: llvm
    sources_required:
      - binutils
    tools_required:
      - host-cmake
    revision: 4
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        - '-DCMAKE_C_COMPILER=gcc'
        - '-DCMAKE_CXX_COMPILER=g++'

        # LLVM configuration options.
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_LINK_LLVM_DYLIB=ON'
        - '-DLLVM_TARGETS_TO_BUILD=X86'
        - '-DLLVM_ENABLE_PROJECTS=clang;clang-tools-extra;lld'

        # clang configuration options.
        - '-DDEFAULT_SYSROOT=@SYSROOT_DIR@'

        # Gold linker configuration options.
        - '-DLLVM_BINUTILS_INCDIR=@SOURCE_ROOT@/ports/binutils/include'

        - '@THIS_SOURCE_DIR@/llvm'
    compile:
      - args: ['ninja', '-j5']
      # Build on a single CPU to prevent OOM on smaller systems.
      #- args: ['ninja', '-j1']
    install:
      - args: ['ninja', 'install']
        quiet: true

  - name: host-pkg-config
    architecture: noarch
    exports_aclocal: true
    source:
      name: 'pkg-config'
      subdir: 'sources'
      url: 'https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz'
      format: 'tar.gz'
      extract_path: 'pkg-config-0.29.2'
      version: '0.29.2'
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--with-internal-glib'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-python
    architecture: noarch
    from_source: python
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-rust
    stability_level: 'broken' # LLVM Bumped?
    architecture: noarch
    from_source: rust
    sources_required:
      - rust-patched-libs
    tools_required:
      - host-llvm-toolchain
      - host-python
      - host-libffi
    revision: 2
    compile:
      - args: |
            cat << EOF > config.toml
            change-id = 102579

            [llvm]
            targets = "X86"
            download-ci-llvm = false

            [build]
            target = ["x86_64-unknown-cryptix-mlibc", "x86_64-unknown-linux-gnu"]
            build-dir = "@THIS_BUILD_DIR@"
            docs = false

            [install]
            prefix = "@PREFIX@"
            sysconfdir = "etc"

            [rust]
            codegen-tests = false
            deny-warnings = false

            [target.x86_64-unknown-linux-gnu]
            llvm-config = "@BUILD_ROOT@/tools/host-llvm-toolchain/bin/llvm-config"

            [target.x86_64-unknown-cryptix-mlibc]
            llvm-config = "@BUILD_ROOT@/tools/host-llvm-toolchain/bin/llvm-config"
            EOF
      - args: ['python3', '@THIS_SOURCE_DIR@/x.py', 'build', '--stage', '2', '-j', '@PARALLELISM@']
        cargo_home: false
        environ:
          CARGO_HOME: '@THIS_BUILD_DIR@/cargo-home'
        isolate_network: false
    install:
      - args: ['python3', '@THIS_SOURCE_DIR@/x.py', 'install', '-j', '@PARALLELISM@']
        cargo_home: false
        environ:
          CARGO_HOME: '@THIS_BUILD_DIR@/cargo-home'
        isolate_network: false

  - name: system-gcc
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++,lto'
        - '--enable-initfini-array'
        - '--enable-libstdcxx-filesystem-ts'

        # - '--disable-multilib'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS="-O2"'
    stages:
      - name: compiler
        pkgs_required:
        - mlibc-headers
        compile:
          # GCC complains if the include directory is non-existent.
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/@OPTION:arch-triple@/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/as',
                               '@PREFIX@/@OPTION:arch-triple@/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/ld',
                               '@PREFIX@/@OPTION:arch-triple@/bin/ld']
      - name: libgcc
        tools_required:
          - tool: system-gcc
            stage_dependencies: [compiler]
        pkgs_required:
          - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']

      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

packages:
  - name: libstdc++
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - system-gcc
      - tool: cross-binutils
        recursive: true
    pkgs_required:
    - mlibc-headers
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        - '--enable-libstdcxx-filesystem-ts'
        - '--enable-libsupcxx'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS="$CXXFLAGS -fno-exceptions"' 
      - args:
        - '@THIS_SOURCE_DIR@/libstdc++-v3/configure'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--disable-multilib'
        - '--enable-libstdcxx-filesystem-ts'
    build:
      # GCC complains if the include directory is non-existent.
      - args: ['CXXFLAGS="$CXXFLAGS -fno-exceptions"', 'make', '-j@PARALLELISM@', '-C', 'include']
      - args: ['CXXFLAGS="$CXXFLAGS -fno-exceptions"', 'make', '-j@PARALLELISM@', '-C', 'libsupc++']
    install:
      - args: ['make', 'install', '-C', 'include']
      - args: ['make', 'install', '-C', 'libsupc++']
